name: Flask CI/CD Pipeline

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]

jobs:
  # -------------------------------
  # 1️⃣ Build & Install dependencies
  # -------------------------------
  build:
    name: Build & Install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8 bandit pytest

  # -------------------------------
  # 2️⃣ Lint & Security Scan
  # -------------------------------
  lint:
    name: Lint & Security Scan
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install tools
        run: pip install flake8 bandit

      - name: Run flake8 (Code Lint)
        run: flake8 . --ignore=E501,W503

      - name: Run Bandit (Security Scan)
        run: bandit -r . -ll

  # -------------------------------
  # 3️⃣ Test (with PostgreSQL service)
  # -------------------------------
  test:
    name: Run Tests (with DB)
    runs-on: ubuntu-latest
    needs: [lint]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest psycopg2-binary

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for database..."
            sleep 2
          done

      - name: Run Tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          FLASK_ENV: testing
        run: |
          pytest -v || exit 1

  # -------------------------------
  # 4️⃣ Build Docker Image
  # -------------------------------
  docker-build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    if: success()  # Only run if tests pass

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/flask-postgres-withdocker:latest

  # -------------------------------
  # 5️⃣ Deploy (Conditional)
  # -------------------------------
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [docker-build]
    if: github.ref == 'refs/heads/main' && success()

    steps:
      - name: Deploy message
        run: echo "✅ Deployment successful to production environment!"
